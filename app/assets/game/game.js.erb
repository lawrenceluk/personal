/*
To do:
Art
Save
Responsive
*/
$("#newsflash").html("Initializing variables...")
var version = "0.1"

// declare variables
var oj = 0
var totaloj = 0
var o = 0
var totalo = 0

var ojcycletime = 15 //seconds
var ojcycle = ojcycletime
var ojpc = 3
var owned_ojpc_upgrades = 1
var ops = 0

var bonus_ops = 0
var bonus_ojpc = 0
var bonus_ojcycletime = 0
var bonuschance = 0.1 // 10% chance for bonus
var basebonustime = 60 // lasts at least 60 seconds (up to 120)

var maxslots = 7
var upgradesuccess = 0.5 // 50% chance of success
var failuredestroy = 0.5 // 50% chance that failure destroys it

var omakers = []
var orangeMakerAmts = []
var ojpc_upgrades
var o_bonuses = []
var oj_bonuses = []
var allItems

var clickreward = omakers.length + 1
var oclicks = 0
var ojclicks = 0
var started = new Date().getTime()
var time = new Date().getTime()
var newstime = 19 // seconds

var fps = 15
var clickchangeamt = 1
var msgcount = 0 // time in seconds till next newsflash

// things that are used but don't need to be saved
var o_messages
var loading
var savetime = 30 // save every 30 seconds
var lastsave = new Date().getTime()

$("#whatversion").html("Version "+version)
$("#s_version").html(version)
$("#emptyshelf").html("You haven't purchased any orange producers yet.")

function loadGame(identifier, quiet) {
	if (quiet === undefined) {
		quiet = false
	}
	if (!identifier.match("[a-z]{8}")) {
		if (!quiet) {
			showNews("Invalid identifier.")
		}
	} else {
		var data = "identifier="+identifier
		var request = $.ajax({
	    url: "load", //sumbits it to the given url of the form
	    type: "GET",
	    data: data,
	    dataType: "HTML",
	    success : function (response) {
	    	if (response.length <= 2) {
	    		if (!quiet) {
	    			showNews("That identifier is not associated with any saves.")
	    		}
	    	} else {
		    	var chunks = response.split("***")
		    	for (var i=0;i<chunks.length;i++) {
		    		if (i > 16 && i < 23) {
		    			continue
		    		}
		    		chunks[i] = parseFloat(chunks[i])
		    	}
		    	// load up the data
					oj = chunks[0]
					totaloj = chunks[1]
					o = chunks[2]
					totalo = chunks[3]

					ojcycletime = chunks[4] //seconds
					ojcycle = chunks[5]
					ojpc = chunks[6]
					owned_ojpc_upgrades = chunks[7]
					ops = chunks[8]

					bonus_ops = chunks[9]
					bonus_ojpc = chunks[10]
					bonus_ojcycletime = chunks[11]
					bonuschance = chunks[12] // 10% chance for bonus
					basebonustime = chunks[13] // lasts at least 60 seconds (up to 120)

					maxslots = chunks[14]
					upgradesuccess = chunks[15] // 50% chance of success
					failuredestroy = chunks[16] // 50% chance that failure destroys it

					omakers = JSON.parse(chunks[17])
					orangeMakerAmts = JSON.parse(chunks[18])
					ojpc_upgrades = JSON.parse(chunks[19])
					o_bonuses = JSON.parse(chunks[20])
					oj_bonuses = JSON.parse(chunks[21])
					var allcosts = JSON.parse(chunks[22])
					for (var i=0;i<allItems.length;i++) {
						allItems[i].cost = allcosts[i]
					}

					clickreward = chunks[23]
					oclicks = chunks[24]
					ojclicks = chunks[25]
					started = chunks[26]
					time = chunks[27]
					newstime = chunks[28] // seconds

					fps = chunks[29]
					clickchangeamt = chunks[30]
					msgcount = chunks[31]

					// give back bonuses
					var now = new Date().getTime()
					for (var i=0;i<o_bonuses.length;i++) {
						var bonus = o_bonuses[i]
						if (bonus.owned && bonus.owneduntil > now) {
							var bonusname = bonus.name.replace(/\s+/g, '')
							var str = "<div class='hoverable' id=contains"+bonusname+">"
							str += "<a class='nohover'><div class='production_upgrade_item'>"+bonus.name+"</div></a>"
							str += "<span class='small ninja'>"+bonus.description+"<div class='smaller'>Expires in "
							str += "<span id="+bonusname+"></span> seconds.</div></span></div>"
							if (!$("#nobonuses").hasClass("hiding")) {
								$("#nobonuses").remove()
							}
							doBonus(bonus, true)
							$("#production_upgrades").append(str)
						}
					}
					for (var i=0;i<oj_bonuses.length;i++) {
						var bonus = oj_bonuses[i]
						if (bonus.owned && bonus.owneduntil > now) {
							var bonusname = bonus.name.replace(/\s+/g, '')
							var str = "<div class='hoverable' id=contains"+bonusname+">"
							str += "<a class='nohover'><div class='production_upgrade_item'>"+bonus.name+"</div></a>"
							str += "<span class='small ninja'>"+bonus.description+"<div class='smaller'>Expires in "
							str += "<span id="+bonusname+"></span> seconds.</div></span></div>"
							if (!$("#nobonuses").hasClass("hiding")) {
								$("#nobonuses").remove()
							}
							doBonus(bonus, true)
							$("#production_upgrades").append(str)
						}
					}

					disp_o = o
					disp_ojcycle = ojcycletime
					drawOShop()
					drawOJShop()
					updateAffordable()
		    	$("#yourid").html(identifier)
		    	$('#oj_cycle_bar').width(Math.round((1-ojcycle/ojcycletime)*110).toString()+"%")
		    	if (!quiet) {
		    		showNews("Loaded successfully! ("+identifier+")")
		    	}
		    	disp()

					/*
					what's missing:
					shelf has to be redrawn
					oj amounts
					bonuses? test
					upgrades? test
					*/
					// draw updated
					if (!$("#emptyshelf").hasClass("hiding")) {
						$("#emptyshelf").remove()
					}
					var str = ""
					for (var i=0;i<omakers.length;i++) {
						if (omakers[i].alive) {
							var tier = omakers[i].tier
							str += "<img src='/assets/o"+tier+".gif' id="+"oc_"+tier+"_"+(i+1)+" class='omaker_item' height=60px>"
						}
					}
					$("#omaker_shelf_purchases").html(str)
	    	}
			},
			failure: function(response) {
				if (!quiet) {
					showNews("Unable to load "+identifier+".")
				}
			}
		})
	}
	return false
}

function saveGame(quiet) {
	if (quiet === undefined) {
		quiet = false
	}
	var allcosts = []
	for (var i=0;i<allItems.length;i++) {
		allcosts[i] = allItems[i].cost
	}
	var data = "identifier="+getCookie("identifier")
	data+="&data="+oj+"***"+totaloj+"***"+o+"***"+totalo+"***"+ojcycletime+"***"+ojcycle+"***"+ojpc+"***"+owned_ojpc_upgrades+"***"
	data+=ops+"***"+bonus_ops+"***"+bonus_ojpc+"***"+bonus_ojcycletime+"***"+bonuschance+"***"+basebonustime+"***"+maxslots+"***"
	data+=upgradesuccess+"***"+failuredestroy+"***"+JSON.stringify(omakers)+"***"+JSON.stringify(orangeMakerAmts)+"***"+JSON.stringify(ojpc_upgrades)+"***"
	data+=JSON.stringify(o_bonuses)+"***"+JSON.stringify(oj_bonuses)+"***"+JSON.stringify(allcosts)+"***"+clickreward+"***"
	data+=oclicks+"***"+ojclicks+"***"+started+"***"+time+"***"+newstime+"***"+fps+"***"+clickchangeamt+"***"+msgcount

	$.ajax({
    type: "POST",
    url: "save", //sumbits it to the given url of the form
    data: data,
    dataType: "HTML",
    success: function(response) {
    	if (!quiet) {
    		showNews("Game saved. ("+getCookie("identifier")+")")
    	}
    },
    failure: function(response) {
    	if (!quiet) {
    		showNews("Error saving! Please try again.")
    	}
    }
	})
	return false
}

function resetGame() {
	oj = 0
	totaloj = 0
	o = 0
	totalo = 0

	ojcycletime = 15 //seconds
	ojcycle = ojcycletime
	ojpc = 3
	owned_ojpc_upgrades = 1
	ops = 0

	bonus_ops = 0
	bonus_ojpc = 0
	bonus_ojcycletime = 0
	bonuschance = 0.1 // 10% chance for bonus
	basebonustime = 60 // lasts at least 60 seconds (up to 120)

	maxslots = 7
	upgradesuccess = 0.5 // 50% chance of success
	failuredestroy = 0.5 // 50% chance that failure destroys it

	cleanAllItems()
	for (var i=0;i<omakers.length;i++) {
		removeOMaker(omakers[i])
	}
	omakers = []
	cleanOJPCUpgrades()
	for (var i = 0; i < allItems.length; i++) orangeMakerAmts[i] = 0; // start with 0 of all

	clickreward = omakers.length + 1
	oclicks = 0
	ojclicks = 0
	started = new Date().getTime()
	time = new Date().getTime()
	newstime = 19 // seconds

	clickchangeamt = 1
	msgcount = 0

	cleanOBonuses()
	cleanOJBonuses()
	// reset all bonuses
	for (var i=0;i<o_bonuses.length;i++) {
		o_bonuses[i].owned = false
		o_bonuses[i].owneduntil = new Date().getTime()
	}
	for (var i=0;i<oj_bonuses.length;i++) {
		oj_bonuses[i].owned = false
		oj_bonuses[i].owneduntil = new Date().getTime()
	}
	$("#production_upgrades").html("")
	// redraw everything
	$('#oj_cycle_bar').width("0%")
	disp_o = 0
	disp_ojcycle = ojcycletime
	drawOShop()
	drawOJShop()
	updateAffordable()
}

/*

============================================================================
MESSAGES
============================================================================

*/

function OMessage(message, req) {
	this.message = message
	this.req = req
}
function loadOMessages() {
	o_messages = [
	new OMessage("Welcome to Juiced Up! v"+version, 0),
	new OMessage("The journey of a thousand oranges begins with a single squeeze!", 15),
	new OMessage("Did you know? Orange juice is usually made with oranges.", 50),
	new OMessage("Buy more orange producers to get more oranges per click.", 100),
	new OMessage("Clicking the orange gives you a chance at bonuses!", 1000),
	new OMessage("Not from concentrate!", 9999),
	new OMessage("Which was named first? Orange the fruit, or the color?", 12000),
	new OMessage("Orange you glad you played this game?", 50000),
	new OMessage("I drink your orange juice! I drink it up!", 100000),
	new OMessage("Orange you tired of clicking? Upgrade your producers!", 150000),
	new OMessage("Orange you tired of orange puns?", 250000),
	new OMessage("Orange is live. Orange is love. Orange is planet.", 450000),
	new OMessage("Don't drink orange juice after brushing your teeth!", 650000),
	new OMessage("Fact: Oranges contain tons of Vitamin C! To unsubscribe from Orange Facts, collect 9,999,999,999,999,999 glasses of OJ.", 1000000),
	new OMessage("Fact: The bigger the navel in a navel orange, the sweeter it is! Am I lying? Who knows!", 2000000),
	new OMessage("Fact: Blood oranges eat their neighbors to grow bigger!", 5000000),
	new OMessage("Fact: The first flavor of sherbet was orange. How do you spell sherbet?", 10000000),
	new OMessage("Fact: Christopher Columbus brought oranges to the new world, so he must have been an cool guy.", 20000000),
	new OMessage("Clicking the Big Orange and Juice Faster buttons give you temporary bonuses. Don't miss out!", 30000000),
	new OMessage("Fact: The color of an orange has nothing to do with how ripe it is. How mysterious!", 40000000),
	new OMessage("Don't forget to upgrade your orange producers. You'll need them in the long haul.", 50000000),
	new OMessage("Fact: It takes fifty glasses of water to grow the oranges for one glass of OJ. OJ is perfect for fighting fires!", 90000000),
	new OMessage("Fact: The orange season lasts from October to June. Get em while they last!", 130000000),
	new OMessage("Fact: The orange juice industry employs 76,000 people in Florida. And you're doing more work than all of them!", 350000000),
	new OMessage("Fact: In global orange juice production, Brasil es numero uno! Hue hue hue brbrbr", 500000000),
	new OMessage("Fact: Oranges are naturally greenish brown and were bred to be orange. Everything you know is a lie!", 750000000),
	new OMessage("You are now unsubscribed from Orange Facts.", 9999999999999999)
]
}


/*

============================================================================
BONUSES
============================================================================

*/

function OBonus(name, description, chance, owneduntil, owned) {
	this.name = name
	this.description = description
	this.chance = chance
	this.owneduntil = new Date().getTime()
	owned = false
}
function cleanOBonuses() {
o_bonuses = [
	new OBonus("Fruit Frenzy", "Doubles orange production from all sources", 0.01),

	new OBonus("Flower Power", "Doubles orange production from orange patches", 0.05),
	new OBonus("Full Bloom", "Gives an additional 0.5 OpS for each orange patch", 0.25),
	new OBonus("Fields of Orange", "Gives an additional 1 OpS for each orange patch", 0.25),

	new OBonus("Shrub Sorcery", "Doubles orange production from orange shrubs", 0.05),
	new OBonus("Shrubbery", "Gives an additional 1 OpS for each orange shrub", 0.15),
	new OBonus("Bushier Shrubs", "Gives an additional 3 OpS for each orange shrub", 0.15),

	new OBonus("Tree Time", "Doubles orange production from orange trees", 0.02),
	new OBonus("Much Harvest", "Gives an additional 3 OpS for each orange tree", 0.15),
	new OBonus("Such Tree", "Gives an additional 5 OpS for each orange tree", 0.15),

	new OBonus("Monkey Business", "Doubles orange production from orangutans", 0.02),
	new OBonus("Aping Around", "Gives an additional 5 OpS for each orangutan", 0.05),
	new OBonus("Chimp Champ", "Gives an additional 12 OpS for each orangutan", 0.05),

	new OBonus("Gifted Grove", "Doubles orange production from orange groves", 0.01),
	new OBonus("Bumper Crop", "Gives an additional 20 OpS for each orange grove", 0.0325),
	new OBonus("Hundred Acre Wood", "Gives an additional 35 OpS for each orange grove", 0.0325),

	new OBonus("Genie On Call", "Doubles orange production from orange genies", 0.01),
	new OBonus("Orange Chicken", "Doubles orange production from orange genies", 0.025),
	new OBonus("More Wishes", "Triples orange production from orange genies", 0.025),

	new OBonus("Money Trees", "Increases bonus chance from clicking by 10 percent", 0.15),
	new OBonus("Good Juju", "Increases bonus chance from clicking by 10 percent", 0.1),
	new OBonus("Clockwork Orange", "Increases base bonus duration by one minute", 0.02)
]
}

function OJBonus(name, description, chance, owneduntil, owned) {
	this.name = name
	this.description = description
	this.chance = chance
	this.owneduntil = new Date().getTime()
	owned = false
}
function cleanOJBonuses() {
oj_bonuses = [
	new OJBonus("Squeezetaculous", "Reduces OJ cycle time by 1 second", 0.1),
	new OJBonus("Squeezalicious", "Reduces OJ cycle time by 1 second", 0.1),
	new OJBonus("Squeezetacular", "Reduces OJ cycle time by 1 second", 0.1),
	new OJBonus("Tight Squeeze", "Reduces OJ cycle time by 1 second", 0.1),
	new OJBonus("Critical Squeeze", "Reduces OJ cycle time by 1 second", 0.1),
	new OJBonus("Squeezus", "Reduces OJ cycle time by 2 seconds", 0.05),
	new OJBonus("Squeeze God", "Reduces OJ Cycle time by 3 seconds", 0.02),

	new OJBonus("Hump Day", "Reduces OJ cycle time by 5 percent", 0.15),
	new OJBonus("Pulp Fiction", "Reduces OJ cycle time by 10 percent", 0.1),
	new OJBonus("Pulp Nonfiction", "Reduces OJ cycle time by 15 percent", 0.05),

	new OJBonus("Packing Pulp", "Gives an additional 5 glasses of OJ per cycle", 0.3),
	new OJBonus("Lesser Efficiency", "Gives an additional 20 glasses of OJ per cycle", 0.2),
	new OJBonus("Great Efficiency", "Gives an additional 40 glasses of OJ per cycle", 0.1),
	new OJBonus("Pulp Alchemy", "Gives an additional 100 glasses of OJ per cycle", 0.08),

	new OJBonus("Juicebox", "Grants additional 2 percent OJ per cycle", 0.15),
	new OJBonus("Juice Fever", "Grants additional 2 percent OJ per cycle", 0.15),
	new OJBonus("Juiceaholic", "Grants additional 2 percent OJ per cycle", 0.1),
	new OJBonus("Juiced Up", "Grants additional 2 percent OJ per cycle", 0.1),
	new OJBonus("Juice Jesus", "Grants additional 4 percent OJ per cycle", 0.05),
	new OJBonus("Juice God", "Grants additional 8 percent OJ per cycle", 0.02)
]
}

/*

============================================================================
UTIL
============================================================================

*/

function showNews(news) {
	$("#newsflash").html(news)
	msgcount = newstime
}

// From http://blog.samgb.com/incrementals-from-zero-to-hero-part-3/
function getCookie(cookie_name) {
    var c_value = document.cookie;
    var c_start = c_value.indexOf(" " + cookie_name + "=");
    if (c_start == -1) {
        c_start = c_value.indexOf(cookie_name + "=");
    }
    if (c_start == -1) return false;
    c_start = c_value.indexOf("=", c_start) + 1;
    var c_end = c_value.indexOf(";", c_start);
    if (c_end == -1) {
        c_end = c_value.length;
    }
    return c_value.substring(c_start, c_end).toString()
}

// From Cookie Clicker
function Beautify(what,floats)//turns 9999999 into 9,999,999
{
	var str='';
	if (!isFinite(what)) return 'Infinity';
	if (what.toString().indexOf('e')!=-1) return what.toString();
	what=Math.round(what*10000000)/10000000;//get rid of weird rounding errors
	if (floats>0)
	{
		var floater=what-Math.floor(what);
		floater=Math.round(floater*10000000)/10000000;//get rid of weird rounding errors
		var floatPresent=floater?1:0;
		floater=(floater.toString()+'0000000').slice(2,2+floats);//yes this is hacky (but it works)
		if (parseInt(floater)===0) floatPresent=0;
		str=Beautify(Math.floor(what))+(floatPresent?('.'+floater):'');
	}
	else
	{
		what=Math.floor(what);
		what=(what+'').split('').reverse();
		for (var i in what)
		{
			if (i%3==0 && i>0) str=','+str;
			str=what[i]+str;
		}
	}
	return str;
}

// http://stackoverflow.com/questions/8211744/convert-milliseconds-or-seconds-into-human-readable-form
function millisecondsToStr (milliseconds) {
    // TIP: to find current time in milliseconds, use:
    // var  current_time_milliseconds = new Date().getTime();

    // This function does not deal with leap years, however,
    // it should not be an issue because the output is aproximated.

    var temp = milliseconds / 1000;
    var years = Math.floor(temp / 31536000);
    var days = Math.floor((temp %= 31536000) / 86400);
    var str = ""
    if (days) {
        str += days + 'd, ';
    }
    var hours = Math.floor((temp %= 86400) / 3600);
    if (hours) {
        str += hours + 'h, ';
    }
    var minutes = Math.floor((temp %= 3600) / 60);
    if (minutes) {
        str += minutes + 'm, ';
    }
    var seconds = Math.floor(temp % 60);
    if (seconds) {
        str += seconds + 's';
    }
    return str
}

/*

============================================================================
THINGS THAT MAKE ORANGES
============================================================================

*/

$("#newsflash").html("Rotoscoping functionaters...")
function cleanAllItems() {
allItems = [
	{
	 tier: 1,
	 name: "Orange Patch", 
	 description: "A little patch of flowers. Oranges mysteriously appear here every so often.", 
	 ops: 0.3,
	 cost: 10,
	 alive: true,
	 slots: 0
	},
	{
	 tier: 2,
	 name: "Orange Shrub", 
	 description: "A little bush that inexplicably produces oranges once in a while.", 
	 ops: 0.6,
	 cost: 33,
	 alive: true,
	 slots: 0
	},
	{
	 tier: 3,
	 name: "Orange Tree", 
	 description: "Citrus sinensis. A tree that produces oranges at a healthy rate.", 
	 ops: 1.5,
	 cost: 333,
	 alive: true,
	 slots: 0
	},
	{
	 tier: 4,
	 name: "Orangutan", 
	 description: "Leaves a trail of oranges in his wake. Food safety not guaranteed.", 
	 ops: 10,
	 cost: 1333,
	 alive: true,
	 slots: 0
	},
	{
	 tier: 5,
	 name: "Orange Grove", 
	 description: "A troop of trees that produces a bountiful harvest.", 
	 ops: 25,
	 cost: 10000,
	 alive: true,
	 slots: 0
	},
	{
	 tier: 6,
	 name: "Orange Genie", 
	 description: "<i>\"Orange doorhinge\"</i>", 
	 ops: 100,
	 cost: 65535,
	 alive: true,
	 slots: 0
	}
]
for (var i = 0; i < allItems.length; i++) orangeMakerAmts[i] = 0; // start with 0 of all
}
/*

============================================================================
THINGS THAT MAKE ORANGE JUICE
============================================================================

*/

function ojpc_upgrade(name, description, req, ojpc, cost, owned) {
	this.name = name
	this.description = description
	this.req = req
	this.cost = cost
	this.ojpc = ojpc
	this.visible = false
	if (!owned) {
		this.owned = 0
	} else {
		this.owned = owned
	}
}

function cleanOJPCUpgrades() {
ojpc_upgrades = [
	new ojpc_upgrade("Little Bullet", "Limited capacity, serves 1", 0, 3, 10, 1),
	new ojpc_upgrade("Blender", "Perfect for small serving sizes", 0, 12, 70),
	new ojpc_upgrade("Blender XL", "Juice for the whole family", 0, 30, 475),
	new ojpc_upgrade("Blender ZZ", "Juice for the family and then some", 1, 50, 600),
	new ojpc_upgrade("Power Juicer", "For small juicing operations", 5, 100, 2000),
	new ojpc_upgrade("Power Juicer XL", "Getting serious about citrus", 10, 150, 3300),
	new ojpc_upgrade("Whirler v1", "Business grade juicing solution", 20, 250, 9000),
	new ojpc_upgrade("Whirler v2", "Upgraded with premium parts for premium pulp", 30, 350, 20000),
	new ojpc_upgrade("Whirler v3", "Top of the line option for small business", 40, 500, 48000),
	new ojpc_upgrade("OJ GIANT", "Stepping into the big leagues", 50, 1000, 100000),
	new ojpc_upgrade("OJ GIANT INDUSTRY GRADE", "The juice flows within you", 75, 30000, 800000),
	new ojpc_upgrade("Titanic Twister", "No one man should have all that power", 100, 100000, 1600000),
	new ojpc_upgrade("The Goliath", "Orange is live", 150, 250000, 9000000),
	new ojpc_upgrade("The Behemoth", "Orange is love", 200, 800000, 25000000),
	new ojpc_upgrade("The Leviathan", "Orange is planet", 300, 2500000, 123456789),
	new ojpc_upgrade("Florida", "", 500, 134000000, 1234567898765),
	]
}

	/*
	time upgrades
	new ojpc_upgrade("Steel Blades", "Slicing and dicing", 3),
	new ojpc_upgrade("Parallel Peeling", "Multithreading for oranges", 5),
	new ojpc_upgrade("Ceramic Blades", "Sharp edges! Keep away from children!", 10),
	new ojpc_upgrade("Perfect Peeling", "NASA scientists have created self-peeling oranges", 14),
	*/

/*

============================================================================
SET THE STAGE
============================================================================

*/

$("#newsflash").html("Coloring in the lines...")
// laugh if you want but I'm tired and it works
function drawBackground() {
	$("body").css("background-color", "#FAEDE6")
	$("body").css("background-image", "-webkit-gradient(linear, 0 0, 0 100%, color-stop(.5, rgba(255, 255, 255, .4)), color-stop(.5, transparent), to(transparent))")
	$("body").css("background-image", "-moz-linear-gradient(rgba(255, 255, 255, .4) 50%, transparent 50%, transparent)")
	$("body").css("background-image", "-o-linear-gradient(rgba(255, 255, 255, .4) 50%, transparent 50%, transparent)")
	$("body").css("-webkit-background-size", "50px 50px")
	$("body").css("-moz-background-size", "50px 50px")
	$("body").css("background-size", "50px 50px")
}
/*	{	// background code shamelessly plundered from http://lea.verou.me/
	background-color: #FAEDE6;
	background-image: -webkit-gradient(linear, 0 0, 0 100%, color-stop(.5, rgba(255, 255, 255, .4)), color-stop(.5, transparent), to(transparent));
	background-image: -moz-linear-gradient(rgba(255, 255, 255, .4) 50%, transparent 50%, transparent);
	background-image: -o-linear-gradient(rgba(255, 255, 255, .4) 50%, transparent 50%, transparent);
	background-image: linear-gradient(rgba(255, 255, 255, .4) 50%, transparent 50%, transparent);
	-webkit-background-size: 50px 50px;
	-moz-background-size: 50px 50px;
	background-size: 50px 50px;}") */

function drawOShop() {
	var shop_contents = ""
	for (var i=0;i<allItems.length;i++) {
		var insert = "info_O_tier_"+(i+1)
		var name = "purchase_O_tier_"+(i+1)

		shop_contents += "<div class='shop_item'>"
		shop_contents += "<div class='title'>"+allItems[i].name+"</div>"
		shop_contents += "<div class='description'>"+allItems[i].description+"</div>"
		shop_contents += "<span id="+insert+" class='info'>Costs "+allItems[i].cost+" glasses of OJ. Owned: "+orangeMakerAmts[i]+"</span>"
		shop_contents += "<div class='omaker_button buy_button' id="+name+">Buy</div><div class='gap'></div>"
		shop_contents += "</div>"
	}
	$("#orange_income_shop").html(shop_contents)
}

function drawOJShop() {
	var shop_contents = ""
	for (var i=0;i<ojpc_upgrades.length;i++) {
		if (ojpc_upgrades[i].req <= owned_ojpc_upgrades) {
			ojpc_upgrades[i].visible = true
			var insert = "info_OJ_"+(i+1)
			var name = "purchase_OJ_"+(i+1)
			shop_contents += "<div class='shop_item_upgrade'>"
			shop_contents += "<div class='title'>"+ojpc_upgrades[i].name+"</div>"
			shop_contents += "<div class='description'><em>"+ojpc_upgrades[i].description+"</em></div>"
			shop_contents += "<div id="+insert+" class='info'>Costs "+ojpc_upgrades[i].cost+" glasses of OJ. Owned: "+ojpc_upgrades[i].owned+"</div>"
			shop_contents += "<div class='ojmaker_button buy_button' id="+name+">Buy</div><div class='gap'></div>"
			shop_contents += "</div>"
		} 
	}
	$("#ojpc_shop").html(shop_contents)
}


function updateOJMakerShop() {
	var shop_contents = ""
	for (var i=0;i<ojpc_upgrades.length;i++) {
		if (ojpc_upgrades[i].req <= owned_ojpc_upgrades && ojpc_upgrades[i].visible == false) {
			ojpc_upgrades[i].visible = true
			var insert = "info_OJ_"+(i+1)
			var name = "purchase_OJ_"+(i+1)
			shop_contents += "<div class='shop_item_upgrade'>"
			shop_contents += "<div class='title'>"+ojpc_upgrades[i].name+"</div>"
			shop_contents += "<div class='description'><em>"+ojpc_upgrades[i].description+"</em></div>"
			shop_contents += "<div id="+insert+" class='info'>Costs "+ojpc_upgrades[i].cost+" glasses of OJ. Owned: "+ojpc_upgrades[i].owned+"</div>"
			shop_contents += "<div class='ojmaker_button buy_button' id="+name+">Buy</div><div class='gap'></div>"
			shop_contents += "</div>"
		} 
	}
	$("#ojpc_shop").append(shop_contents)
}
/*

============================================================================
GRAPHICS
============================================================================

*/

function drawOrangeClicked(amt, x, y) {
	var name = Math.round(Math.random()*1000000).toString()
	$("#big_orange_area").append("<span class='clicked_orange' id="+name+">+"+amt+"</span>")
	$("#"+name).css({
	  position:'absolute',
	  top: (y+55+(Math.random()*20)),
	  left: x-25,
	  zIndex: 100
	})
	animateOClick($("#"+name), x, 30)
}

function animateOClick(div, x, countdown) {
	div.css({
		left: x,
		opacity:countdown/10
	})
	if (countdown > 0) {
		setTimeout(function() {animateOClick(div, x+8, countdown-1)}, 30)
	} else {
		div.remove()
	}
}

/*

============================================================================
BONUSES
============================================================================

*/

function getOBonus() {
	var bonus = o_bonuses[Math.floor(Math.random()*o_bonuses.length)]
	if (Math.random() > bonus.chance*bonuschance) {
		// don't get the bonus
	} else if (bonus.owneduntil < new Date().getTime()) {
		var seconds = Math.round(basebonustime+Math.random()*basebonustime)
		bonus.owneduntil = (new Date().getTime())+seconds*1000
		bonus.owned = true
		var bonusname = bonus.name.replace(/\s+/g, '')

		var str = "<div class='hoverable' id=contains"+bonusname+">"
		str += "<a class='nohover'><div class='production_upgrade_item'>"+bonus.name+"</div></a>"
		str += "<span class='small ninja'>"+bonus.description+"<div class='smaller'>Expires in "
		str += "<span id="+bonusname+"></span> seconds.</div></span></div>"
		if (!$("#nobonuses").hasClass("hiding")) {
			$("#nobonuses").remove()
		}
		doBonus(bonus, true)
		showNews("You received a bonus: '"+bonus.name+"'! "+bonus.description+".")
		$("#production_upgrades").append(str)
	}
}

function getOJBonus() {
	var bonus = oj_bonuses[Math.floor(Math.random()*oj_bonuses.length)]
	if (Math.random() > bonus.chance*bonuschance) {
		// don't get the bonus
	} else if (bonus.owneduntil < new Date().getTime()) {
		var seconds = Math.round(basebonustime+Math.random()*basebonustime)
		bonus.owned = true
		bonus.owneduntil = (new Date().getTime())+seconds*1000
		var bonusname = bonus.name.replace(/\s+/g, '')

		var str = "<div class='hoverable' id=contains"+bonusname+">"
		str += "<a class='nohover'><div class='production_upgrade_item'>"+bonus.name+"</div></a>"
		str += "<span class='small ninja'>"+bonus.description+"<div class='smaller'>Expires in "
		str += "<span id="+bonusname+"></span> seconds.</div></span></div>"
		if (!$("#nobonuses").hasClass("hiding")) {
			$("#nobonuses").remove()
		}
		doBonus(bonus, true)
		showNews("You received a bonus: '"+bonus.name+"'! "+bonus.description+".")
		$("#production_upgrades").append(str)
	}
}

/*
	Given the name of bonus, apply (true) or remove (false)
*/
function doBonus(bonus, apply) {
	if (bonus.name === "Fruit Frenzy") {
		for (var i=0;i<omakers.length;i++) {
			if (apply) {
				bonus_ops += omakers[i].ops
			} else {
				bonus_ops -= omakers[i].ops
			}
		}
	} else if (bonus.name === "Flower Power") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orange Patch") {
				if (apply) {
					bonus_ops += omakers[i].ops
				} else {
					bonus_ops -= omakers[i].ops
				}
			}
		}
	} else if (bonus.name === "Full Bloom") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orange Patch") {
				if (apply) {
					bonus_ops += 0.5
				} else {
					bonus_ops -= 0.5
				}
			}
		}
	} else if (bonus.name === "Fields of Orange") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orange Patch") {
				if (apply) {
					bonus_ops += 1
				} else {
					bonus_ops -= 1
				}
			}
		}
	} else if (bonus.name === "Shrub Sorcery") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orange Shrub") {
				if (apply) {
					bonus_ops += omakers[i].ops
				} else {
					bonus_ops -= omakers[i].ops
				}
			}
		}
	} else if (bonus.name === "Shrubbery") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orange Shrub") {
				if (apply) {
					bonus_ops += 1
				} else {
					bonus_ops -= 1
				}
			}
		}
	} else if (bonus.name === "Bushier Shrubs") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orange Shrub") {
				if (apply) {
					bonus_ops += 3
				} else {
					bonus_ops -= 3
				}
			}
		}
	} else if (bonus.name === "Tree Time") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orange Tree") {
				if (apply) {
					bonus_ops += omakers[i].ops
				} else {
					bonus_ops -= omakers[i].ops
				}
			}
		}
	} else if (bonus.name === "Much Harvest") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orange Tree") {
				if (apply) {
					bonus_ops += 3
				} else {
					bonus_ops -= 3
				}
			}
		}
	} else if (bonus.name === "Such Tree") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orange Tree") {
				if (apply) {
					bonus_ops += 5
				} else {
					bonus_ops -= 5
				}
			}
		}
	} else if (bonus.name === "Monkey Business") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orangutan") {
				if (apply) {
					bonus_ops += omakers[i].ops
				} else {
					bonus_ops -= omakers[i].ops
				}
			}
		}
	} else if (bonus.name === "Aping Around") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orangutan") {
				if (apply) {
					bonus_ops += 5
				} else {
					bonus_ops -= 5
				}
			}
		}
	} else if (bonus.name === "Chimp Champ") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orangutan") {
				if (apply) {
					bonus_ops += 12
				} else {
					bonus_ops -= 12
				}
			}
		}
	} else if (bonus.name === "Gifted Grove") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orange Grove") {
				if (apply) {
					bonus_ops += omakers[i].ops
				} else {
					bonus_ops -= omakers[i].ops
				}
			}
		}
	} else if (bonus.name === "Bumper Crop") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orange Grove") {
				if (apply) {
					bonus_ops += 20
				} else {
					bonus_ops -= 20
				}
			}
		}
	} else if (bonus.name === "Hundred Acre Wood") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orange Grove") {
				if (apply) {
					bonus_ops += 35
				} else {
					bonus_ops -= 35
				}
			}
		}
	} else if (bonus.name === "Genie On Call") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orange Genie") {
				if (apply) {
					bonus_ops += omakers[i].ops
				} else {
					bonus_ops -= omakers[i].ops
				}
			}
		}
	} else if (bonus.name === "Orange Chicken") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orange Genie") {
				if (apply) {
					bonus_ops += omakers[i].ops
				} else {
					bonus_ops -= omakers[i].ops
				}
			}
		}
	} else if (bonus.name === "More Wishes") {
		for (var i=0;i<omakers.length;i++) {
			if (omakers[i].name === "Orange Genie") {
				if (apply) {
					bonus_ops += omakers[i].ops
				} else {
					bonus_ops -= omakers[i].ops
				}
			}
		}
	} else if (bonus.name === "Money Trees") {
		if (apply) {
			bonuschance += 0.1
		} else {
			bonuschance -= 0.1
		}
	} else if (bonus.name === "Good Juju") {
		if (apply) {
			bonuschance += 0.1
		} else {
			bonuschance -= 0.1
		}
	} else if (bonus.name === "Clockwork Orange") {
		if (apply) {
			basebonustime += 60
		} else {
			basebonustime -= 60
		}
	} else if (bonus.name === "Squeezetaculous" || bonus.name === "Squeezalicious" 
		|| bonus.name === "Squeezetacular" || bonus.name === "Tight Squeeze" || bonus.name === "Critical Squeeze") {
		if (apply) {
			bonus_ojcycletime -= 1
		} else {
			bonus_ojcycletime += 1
		}
	} else if (bonus.name === "Squeezus") {
		if (apply) {
			bonus_ojcycletime -= 2
		} else {
			bonus_ojcycletime += 2
		}
	} else if (bonus.name === "Squeeze God") {
		if (apply) {
			bonus_ojcycletime -= 3
		} else {
			bonus_ojcycletime += 3
		}
	} else if (bonus.name === "Hump Day") {
		if (apply) {
			bonus_ojcycletime -= Math.round(ojcycletime*0.05)
		} else {
			bonus_ojcycletime += Math.round(ojcycletime*0.05)
		}
	} else if (bonus.name === "Pulp Fiction") {
		if (apply) {
			bonus_ojcycletime -= Math.round(ojcycletime*0.1)
		} else {
			bonus_ojcycletime += Math.round(ojcycletime*0.1)
		}		
	} else if (bonus.name === "Pulp Nonfiction") {
		if (apply) {
			bonus_ojcycletime -= Math.round(ojcycletime*0.15)
		} else {
			bonus_ojcycletime += Math.round(ojcycletime*0.15)
		}		
	} else if (bonus.name === "Packing Pulp") {
		if (apply) {
			bonus_ojpc += 5
		} else {
			bonus_ojpc -= 5
		}		
	} else if (bonus.name === "Lesser Efficiency") {
		if (apply) {
			bonus_ojpc += 20
		} else {
			bonus_ojpc -= 20
		}		
	} else if (bonus.name === "Great Efficiency") {
		if (apply) {
			bonus_ojpc += 40
		} else {
			bonus_ojpc -= 40
		}
	} else if (bonus.name === "Pulp Alchemy") {
		if (apply) {
			bonus_ojpc += 100
		} else {
			bonus_ojpc -= 100
		}
	} else if (bonus.name === "Juicebox" || bonus.name === "Juice Fever" || bonus.name === "Juiceaholic"
		 || bonus.name === "Juiced Up") {
		if (apply) {
			bonus_ojpc += Math.round(ojpc*0.02)
		} else {
			bonus_ojpc -= Math.round(ojpc*0.02)
		}
	} else if (bonus.name === "Juice Jesus") {
		if (apply) {
			bonus_ojpc += Math.round(ojpc*0.04)
		} else {
			bonus_ojpc -= Math.round(ojpc*0.04)
		}
	} else if (bonus.name === "Juice God") {
		if (apply) {
			bonus_ojpc += Math.round(ojpc*0.08)
		} else {
			bonus_ojpc -= Math.round(ojpc*0.08)
		}
	}
}

function haveBonus(name) {
	for (var i=0; i < oj_bonuses.length; i++) {
		if (oj_bonuses[i].name === name && oj_bonuses[i].owned)
			return true
	}
	for (var i=0; i < o_bonuses.length; i++) {
		if (o_bonuses[i].name === name && o_bonuses[i].owned)
			return true
	}
	return false
}

function doBonuses(apply) {
	for (var i=0; i < oj_bonuses.length; i++) {
		if (oj_bonuses[i].owned) {
			doBonus(oj_bonuses[i], apply)
		}
	}
	for (var i=0; i < o_bonuses.length; i++) {
		if (o_bonuses[i].owned) {
			doBonus(o_bonuses[i], apply)
		}
	}
}
/*

============================================================================
BUTTONS
============================================================================

*/

$("#newsflash").html("Loosening buttons...")

var lastclicked_o = new Date().getTime()
// CLICKED THE BIG ORANGE
$("#geto_button").mousedown(function(e) {
	if ((new Date().getTime()) > lastclicked_o+100) {
		getOBonus()
		oclicks++
		var o_given = clickreward
		o += o_given
		totalo += o_given
		disp_o += o_given
		lastclicked_o = new Date().getTime()

		// graphics
	  var offset = $(this).offset()
   	drawOrangeClicked(o_given, e.clientX - offset.left, e.clientY - offset.top)
   	$("#o_count").html(Beautify(disp_o))
  }
})

var lastclicked_oj = new Date().getTime()
// CLICKED JUICE FASTER
$("#makeoj_button").click(function () {
	if ((new Date().getTime()) > lastclicked_oj+350) {
		getOJBonus()
		ojclicks++
		if (o > 0) {
			ojcycle -= clickchangeamt
			disp_ojcycle -= clickchangeamt
		}
		calculateJuiceSqueezed()
		lastclicked_oj = new Date().getTime()
	}
})

function purchaseOMaker(tier) {
	var cost = allItems[tier-1].cost
	//if they have enough oj
	if (oj >= cost) {
		// empty the shelf
		if (!$("#emptyshelf").hasClass("hiding")) {
			$("#emptyshelf").remove()
		}
		// pay up
		oj -= cost
		// remove existing bonuses
		doBonuses(false)
		// give the item
		omakers.push(allItems[tier-1])
		// update amount owned
		orangeMakerAmts[tier-1]++
		// update cost
		allItems[tier-1].cost = Math.round(Math.pow(cost+orangeMakerAmts[tier-1], 1.01))
		// draw the new item
		var str = "<img src='/assets/o"+tier+".gif' id="+"oc_"+tier+"_"+omakers.length+" class='omaker_item' height=60px>"
		$("#omaker_shelf_purchases").append(str)

		var newops = 0
		// Update oranges per second
		for (var i = 0; i < omakers.length; i++) {
			if (omakers[i].alive) {
				newops += omakers[i].ops
			}
		}
		ops = newops
		// Update click reward
		clickreward++
		// update all values
		updateAffordable()
		// give back bonuses
		doBonuses(true)

		if (ops < 1000) {
			$("#ops_count").html(Math.round(ops * 10) / 10)
		} else {
			$("#ops_count").html(Beautify(ops))
		}
		$("#oj_count").html(Beautify(oj))
	}
}

// CLICK AN ITEM TO SEE ITS DETAILS

$("#omaker_shelf_purchases").on('click', function(event) {
	var index = parseInt(event.target.id.split("_").slice(-1)[0])-1
	var item = omakers[index]
	if (item) {
		var disabled = ""
		if (item.slots >= maxslots) {
			disabled = "inactive"
		}
		var str = item.name+"<div class='pull-right'><div class='o_option "+disabled+"' id="+"upgrade_o_"+index
		str += " title='Doubles OpS with "+(upgradesuccess*100)+"% success rate. If upgrade fails, this producer has a "
		str += (failuredestroy*100)+"% chance to be destroyed.'>Upgrade</div>"
		str += "<div class='sell o_option' id="+"sell_o_"+index+" title='Sells for "
		str += Math.round(item.cost/2)+" OJ.'>Sell</div></div>"
		str += " <div class='small'>OpS: <span id='ops_update'>"+item.ops+"</span>"
		str += "<br>Upgrades: <span id='slots'>"+item.slots+"</span>/"+maxslots+"</div>"
		$("#omaker_detail").html("<div class='shorter shelf'>"+str+"</div>")
		$("#shelf_container").height("325px")
	} else {
		$("#omaker_detail").html("")
		$("#shelf_container").height("425px")
	}
})

$("#omaker_detail").on('click', function(event) {
	var index = parseInt(event.target.id.split("_").slice(-1)[0])
	if (!isNaN(index)) {
		var item = omakers[index]
		if (event.target.id.split("_")[0] === "sell") {
			if (confirm("Are you sure you want to sell this "+item.name+"? You'll miss out on "+item.ops+" oranges per second.")) {
				showNews("Sold "+item.name+" ("+item.ops+" OpS) for "+Math.round(item.cost/2)+" OJ.")
				oj += Math.round(item.cost/2)
				allItems[removeOMaker(item)].cost = Math.floor(Math.pow(item.cost, 0.995))
				updateAffordable()
			}
		} else {
			// if slots are left
			if (item.slots < maxslots) {
				// if success
				if (Math.random() <= upgradesuccess) {
					item.ops += item.ops
					$("#ops_update").html(item.ops)
					item.slots++
					$("#slots").html(item.slots)
					// Recalculate oranges per second
					var newops = 0
					for (var i = 0; i < omakers.length; i++) {
						if (omakers[i].alive) {
							newops += omakers[i].ops
						}
					}
					ops = newops
					if (item.slots == maxslots) {
						$("#"+event.target.id).addClass("inactive")
					}
					showNews("Upgraded "+item.name+" to "+item.ops+" OpS! Used "+item.slots+" out of "+maxslots+" possible upgrades.")
				} else {
					// if explodes!
					if (Math.random() < failuredestroy) {
						showNews("Oh no! The "+item.name+" ("+item.ops+" OpS) was destroyed while trying to upgrade!")
						allItems[removeOMaker(item)].cost = Math.floor(Math.pow(item.cost, 0.996))
						updateAffordable()
					} else {
						item.slots++
						$("#slots").html(item.slots)
						var str = "An upgrade was attempted but the "+item.name
						str += " ("+item.ops+" OpS) didn't change. "+(maxslots-item.slots)+" tries remaining."
						showNews(str)
					}
				}
			}
		}
	}
})

function removeOMaker(item) {
	var tier = -1
	for (var i=0;i<allItems.length;i++) {
		if (allItems[i].name == item.name) {
			tier = i
			break
		}
	}
	if (tier != -1) {
		// remove existing bonuses
		doBonuses(false)
		// remove amt
		orangeMakerAmts[tier]--
		// remove the item from shelf
		$("#oc_"+(tier+1)+"_"+(omakers.indexOf(item)+1)).remove()
		// make it inactive
		item.alive = false
		// so it won't get bonuses
		item.name = ""
		// reduce orange per click
		clickreward--
		// redo bonus
		doBonuses(true)
		// Update oranges per second
		var newops = 0
		for (var i = 0; i < omakers.length; i++) {
			if (omakers[i].alive) {
				newops += omakers[i].ops
			}
		}
		ops = newops
		// update omaker counts
		updateAffordable()
		// back to main shelf view
		$("#omaker_detail").html("")
		$("#shelf_container").height("425px")
		return tier
	}
}

var savelastclicked = new Date().getTime()
$("#savebutton").click(function() {
	// if it's been 5 seconds since last save
	if (new Date().getTime() > savelastclicked + 5000) {
		saveGame()
		savelastclicked = new Date().getTime()
	}
})

$("#loadbutton").click(function() {
	loadGame($("#getloadid").val())
})

$("#resetbutton").click(function() {
	if (confirm("Are you sure? You will lose all the progress you have made in this game.")) {
		resetGame()
	}
})
$("#orange_income_shop").on('click', function(event) {
	purchaseOMaker(parseInt(event.target.id.slice(-1)))
})

// BOUGHT AN OJPC UPGRADE
$("#ojpc_shop").on('click', function(event) {
	// super ghetto way to get the last digits representing tier
	var tier = parseInt(event.target.id.split("_").slice(-1)[0])
	var cost = ojpc_upgrades[tier-1].cost
	//if they have enough oj
	if (oj >= cost) {
		//pay up
		oj -= cost
		//increase ojpc
		ojpc += ojpc_upgrades[tier-1].ojpc
		// remove bonuses
		doBonuses(false)
		// update amount owned
		owned_ojpc_upgrades++
		ojpc_upgrades[tier-1].owned++
		// update cost
		if (ojpc_upgrades[tier-1].owned < 10) {
			ojpc_upgrades[tier-1].cost = Math.round(Math.pow(cost+(Math.random()*ojpc_upgrades[tier-1].owned), 1.1))
		} else {
			ojpc_upgrades[tier-1].cost = Math.round(Math.pow(cost, 1.01))
		}
		// update shop based on unlocks
		updateOJMakerShop()
		// update what's affordable
		updateAffordable()
		// apply bonuses again
		doBonuses(true)
		// update costs
		$("#info_OJ_"+(tier)).html("Costs "+ojpc_upgrades[tier-1].cost+" glasses of OJ. Owned: "+ojpc_upgrades[tier-1].owned)
	}
})

/* Viewing Stats or returning to display */
$("#stats").click(function() {
	if ($("#stats").html() == "Stats") {
		$("#stats").html("Shelf")
		/* Draw the stats page */
		$("#omaker_shelf_purchases").addClass("hidden")
		$("#omaker_detail").addClass("hidden")
		$("#save_zone").addClass("hidden")
		$("#stats_zone").removeClass("hidden")
		$("#shelf_container").height("425px")
	} else {
		$("#stats").html("Stats")
		/* Change back to shelf */
		$("#omaker_shelf_purchases").removeClass("hidden")
		$("#omaker_detail").removeClass("hidden")
		$("#stats_zone").addClass("hidden")
		$("#save_zone").addClass("hidden")
		if ($("#omaker_detail").html() != "") {
			$("#shelf_container").height("325px")
		}
	}
})

/* Viewing Stats or returning to display */
$("#save").click(function() {
	$("#omaker_shelf_purchases").addClass("hidden")
	$("#omaker_detail").addClass("hidden")
	$("#stats_zone").addClass("hidden")
	$("#save_zone").removeClass("hidden")
	$("#shelf_container").height("425px")
})

function updateAffordable() {
	for (var i=0;i<allItems.length;i++) {
		$("#info_O_tier_"+(i+1)).html("Costs "+allItems[i].cost+" glasses of OJ. Owned: "+orangeMakerAmts[i])
		if (oj < allItems[i].cost) {
			$("#purchase_O_tier_"+(i+1)).addClass("unaffordable")
		} else {
			$("#purchase_O_tier_"+(i+1)).removeClass("unaffordable")
		}
	}
	for (var i=0;i<ojpc_upgrades.length;i++) {
		if (oj < ojpc_upgrades[i].cost) {
			$("#purchase_OJ_"+(i+1)).addClass("unaffordable")
		} else {
			$("#purchase_OJ_"+(i+1)).removeClass("unaffordable")
		}
	}
}
/*

============================================================================
GAME LOOP
============================================================================

*/

$("#newsflash").html("Initializing game loop...")

var unfocused = false

var disp_o = o
var disp_ojcycle = ojcycle

window.addEventListener("focus", function(event) {
	$('#oj_cycle_bar').width(Math.round((1-ojcycle/ojcycletime)*110).toString()+"%")
	$("#o_count").html(Math.floor(o))
	unfocused = false
})

window.addEventListener("blur", function(event) {
	unfocused = true
})

function disp() {
	if (disp_o < o) {
		disp_o += (ops+bonus_ops)/fps
	}
	if (o > 0) {
		if (disp_ojcycle >= ojcycle) {
			disp_ojcycle -= 1/fps
			$('#oj_cycle_bar').width(Math.round((1-disp_ojcycle/(ojcycletime+bonus_ojcycletime))*110).toString()+"%")
		}
	}
	$("#o_count, #s_o").html(Beautify(disp_o))
}

function calculateJuiceSqueezed() {
		// Counting for OJ production cycle
		if (ojcycle <= 0) {
			$('#oj_cycle_bar').css("width", "0%")
			var cycletime = ojcycletime+bonus_ojcycletime
			if (cycletime < 3) {
				cycletime = 3
			}
			ojcycle = cycletime
			disp_ojcycle = cycletime
			var dojpc = ojpc + bonus_ojpc
			if (o >= dojpc) {
				disp_o -= dojpc
				o -= dojpc
				oj += dojpc
				totaloj += dojpc
			} else if (o > 0 && disp_o < dojpc) {
				oj += o
				totaloj += o
				o = 0
				disp_o = 0
			} else {
				disp_o = 0
				o = 0
			}

			// Recalculate what's affordable
			updateAffordable()
			disp_o = o
		}
}

function logic() {
	for (var i = 0; i < oj_bonuses.length; i++) {
		var now = new Date().getTime()
		var bonus = oj_bonuses[i]
		var bonusname = bonus.name.replace(/\s+/g, '')
		if (bonus.owned) {
			if (bonus.owneduntil <= now) {
				doBonus(bonus, false)
				bonus.owned = false
				$("#contains"+bonusname).remove()
				showNews(bonus.name+" has expired.")
			} else {
				var seconds = Math.floor((bonus.owneduntil - now)/1000)
				$("#"+bonusname).html(seconds)
			}
		}
	}
	for (var i = 0; i < o_bonuses.length; i++) {
		var now = new Date().getTime()
		var bonus = o_bonuses[i]
		var bonusname = bonus.name.replace(/\s+/g, '')
		if (bonus.owned) {
			if (bonus.owneduntil <= now) {
				doBonus(bonus, false)
				bonus.owned = false
				$("#contains"+bonusname).remove()
				showNews(bonus.name+" has expired.")
			} else {
				var seconds = Math.floor((bonus.owneduntil - now)/1000)
				$("#"+bonusname).html(seconds)
			}
		}
	}

	if (unfocused || (new Date().getTime() - time) > 1000) {
		time = new Date().getTime()

		calculateJuiceSqueezed()
		if (o >= 1) {
			ojcycle -= 1
		}
		// Update oranges based on production
		o += ops+bonus_ops
		totalo += ops+bonus_ops

		if (msgcount-- <= 0) {
		 	// message if applicable
		 	var message
		 	for (var i = 0; i < o_messages.length; i++) {
		 		if (totalo >= o_messages[i].req) {
		 			message = o_messages[i].message
		 		}
		 	}
		 	showNews(message)
		}
		if ((lastsave+savetime*1000) < new Date().getTime()) {
			saveGame(true) // save quietly
			lastsave = new Date().getTime()
		}
		// Update page title
		document.title = Beautify(oj)+" Glasses of OJ"
		// Display new values on counters
		if (ops+bonus_ops < 1000) {
			$("#ops_count").html(Math.round((ops+bonus_ops) * 10) / 10)
		} else {
			$("#ops_count").html(Beautify(ops+bonus_ops))
		}
		$("#oj_count, #s_oj").html(Beautify(oj))
		$("#ojpc_count").html(Beautify(ojpc+bonus_ojpc)+" Glasses every "+Beautify(ojcycletime+bonus_ojcycletime))

		// Update stat counter
		$("#s_totalo").html(Beautify(totalo))
		$("#s_totaloj").html(Beautify(totaloj))
		$("#s_ojclicks").html(Beautify(ojclicks))
		$("#s_oclicks").html(Beautify(oclicks))
		$("#s_ojcycle").html(Beautify(ojcycletime+bonus_ojcycletime))
		$("#s_ojcycletime").html(Beautify(ojcycletime))
		$("#s_bonusojcycletime").html(Beautify(Math.abs(bonus_ojcycletime)))
		$("#s_ojpctotal").html(Beautify(ojpc+bonus_ojpc))
		$("#s_ojpc").html(Beautify(ojpc))
		$("#s_bonusojpc").html(Beautify(bonus_ojpc))
		$("#s_clickreward").html(clickreward)
		$("#s_opstotal").html(Math.round((ops+bonus_ops) * 10) / 10)
		$("#s_ops").html(Math.round(ops * 10) / 10)
		$("#s_bonusops").html(Math.round(bonus_ops * 10) / 10)
		$("#s_bonus").html(Beautify(bonuschance*100))
		$("#s_fps").html(fps)
		$("#s_time").html(millisecondsToStr(new Date().getTime() - started))
		$("#game_saved").html(Math.floor((lastsave+savetime*1000 - new Date().getTime())/1000))
	}
}

function firstrunGame() {
	cleanAllItems()
	cleanOBonuses()
	cleanOJBonuses()
	cleanOJPCUpgrades()

	drawBackground()
	drawOShop()
	drawOJShop()
	setInterval(logic, 500)
	setInterval(disp, 1000/fps)
	loadOMessages()
	updateAffordable()
}

function tryLoadSave() {
	loadGame(getCookie("identifier"), true)
}

// save on exit
$(window).unload(function() {
	//saveGame(true)
})

firstrunGame()
tryLoadSave()